import unittest
from unittest.mock import patch, mock_open
from bioinformatics_tools import (run_genscan, GenomicElement,
                                  DNASequence, RNASequence, AminoAcidSequence)



class MyTestCase(unittest.TestCase):
    def test_run_genscan(self):
        sequence = 'CTTTCTGTCCCGCCCTTCCTCTGACTGTGTCTTGATTTCCTATTCTGAGAGGCTATTGCTCAGCGGTTTC CGTGGCAACAGTAAAGCGTGGGAATTACAGATAAATTAAAACTGTGGAACCCCTTTCCTCGGCTGCCGCC AAGGTGTTCGGTCCTTCCGAGGAAGCTAAGGCCGCGTTGGGGTGAGACCCTCACTTCATCCGGTGAGTAG CACCGCGTCCGGCAGCCCCAGCCCCACACTCGCCCGCGCTATGGCCTCCGTCTCCCAGCTTGCCTGCATC TACTCTGCCCTCATTCTGCAGGACTATGAGGTGACCTTTACGGAGGATAAGATCAATGCCCTTATTAAAG CAGCCAGTGTAAATATTGAAACTTTTTGGCCTGGCTTGTTTGCAAAGGTCCTGGCCAACGTCAACATTGG GAGCCACATCTGCAGTGTAGAGGGGGGGAAAAAAACGTGACTGCGCGTCGTGAGCTCGCTGAGACGTTCT GGACGGGGGACAGGCCGTGGGGTTTCTCAGATAACTGGGCCCCTGGGCTCAGGAGGCCTGCACCCTCTGC TCTGGGTTAAGGTAGAAGAGCCCCGGGAAAGGGACAGGGGCCCAAGGGATGCTCCGGGGGACGGGCGGGG GAAAGTGAATTTCCGAAGCTAGGCAGATGGGTATTCTTATGCGAGGGGCGGGGGCGGAACCTGAGAGGCA TAAGGCGTTGTGAACCCCCCGGGGAAGGGGGCAGTTTGTAGGTCTCGAGGGAAGCACTAAGGATCAGGTT GGGGGCACAGTGTGTCCGAGGAGGAATCCTCCTGATAGGAACTGGAATGTGCCTTGAAGGGGACACCATG TGTATAAGAACATCAGCTGGTCGCCGGGGATGGTGGCTTACGCCTGTATTCCTAGCACTTTGGGAGGCCA AGGCGGATGGATCACGAGGTCAGGAGTTCGAGACCAGCCTGACCATCGTGGTGAAACCCCGTCTCTACTA AAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCAGCTACTCAGGAGCTGAGGCAGGAGAATCGCTT GAACCCAGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCATTGCACTCCAGCCTGGGTGGCAGAACGA CACTCCGTCTCAAAAACAAACAAAGAAATAAACACCGGCTGGTATATATGAGAAGATGGGCCCTTGCGGA AGAAGAAGTGCCAGGAATATGTCTGGGAAGGGGAGGAGACAGGATTTTGTGGGAGGGAGAACTTAAGAAC TGGATCCATTTGTGCTATTGAGAAAGCGCAAGAGGGAAGTAGAGGAGCGTCAGTAGTAACAGATGCTGCC GGCAGGGATGTGCTTGAGGGGGATCCTGAGATGAGAGTGGGTCGCTGGGAAAGGCTAGGGGCAGGGAGGC CTTGATTGGTGTTGGTTTGGTCGTTGTTGATTTTGGTTTTATGCAAGAAAAAGAAAACAGCCAGAAGCAT TGGAGAAAGCTCACCACTTACCCGGTCAGTCACTCCCCTGTAGCTTTCTCTTTCTTGGAGAAAGGAAAAG ACCCAAAGGGTTGGAAGCAATATGTGAAAAAATACAGAATTTATATTGTCTAATTACAAAAAGCAACTTC TAGAACCTTTAAAGGATTTTGTATTATTCTAAAACCTTCCAAATCTTAAATTTACCTTATTTTATTTTAT TTATTTTTGAGACGGAGCTTCGCTCTTGTTGCCCAGGCTGGAGTGTAATGGCGTGATTTGGGCTCACCGC AACCTCTGACTCGTGGGTTCAAGCGATTCTCCTGCCTCAGCTCCCGAGTAGCTGGGATTACACGCATGCA CCACCATGCCTGGCTCATTTTTTTGTATTTTTAGTAGAAACGAGGTTTCTCCGTATTGGTCAGGCTGGTC TTGAACTCCCGACCTCAGGTCATCCGCCCGCCTCGGCCTCCCTAAGTGCTGTGATTACAGGCGTGAGCCA CCACGCCCAGCCCAATTTACCTTATTTTAAAATGATAAAATGAAGTTGTCATTTTTCTAAACCTTTTTAA AAGATACATGTTTTTCTAATGTGTTAAAGTTCATTGGAACAGAAAGAGATAGATTTATCTGCTGTTTGCG TTGAAGAAGTACAAAATGTCCTTAATGCTATGCAGAAAATCTTACAGTGTCCAATCTGGTAAGTCACCAG AAGAGGGTATTAATTTGGGATTCCTATATGATTATCTCCTATGCAAATGAACAGAATTGACCTTACATAG AAGGGAGGAAAAGACATGTCTAATAAGATTAGGCTATTGTAATTGCTGATTTTCTTAACTGAAGAACTTT AAAAGTATAGAAAATGAATCCTTGTTCTCCATCCACTCTGCCTCTCCCACTCCTCTCCTCTTCAACACAA ATCCTGTGGTCCCTGAAAGACAGGGACCCTGTCTTGATTGGTTCTGCACTGGGGCAGGAATCTAGTTTAG ATTAACTGGCATTTTGGTTTTCTTCTAGCTCTAAAACCAGCTCCATCACTTGAAATGGCAAAATAAATCA TGAATGAGGCCGGGGGCTGTGGCTCACACCTGTAATCCCAGCACTCTGGGGGGCCGAGGCAGGCAGATCA CGAGGTCAGGAGATCGAGACCATCCTGGCTAACATGGTGTAAGGGAGGAGACCACCCCTCATATTGTCTT ATGCCCAATTTCTGCCTCCAAAGAAAGAAAAAGTAAAAACTAAAGGGCAGAAATGACATCCACAAGCAGA CACCCCAGGTGCCACACCCTGGGCCTGGTAGTTAAAAATCAACCCCTGACCTGATTGGTATGTTATCTAT AGATTACAGACATTGTATAGAAAAGCACTGTGACAATGCCTTTCCTGTTTTGTTCCGATCTAGTTACTGG TGCATGCAGCCCCCAGTCACGTACCCCCTGCTTGCTCAATTGATCACGACCCTCTCACGTGCACCCCCTT AGAGTTGTGAGCCCTTAAAAGGGACAGGAATTGCTCACTCGGGGAGCTTGGCTCTTGAGACCGGAGTCTT GCCGATGCCCCTGGCCTAATAAACCCCTTCCTTCTTTAACTCGGTGTCTGATAAGTTTTGTCTGCAGCTC GATTTCTTGGTTCCCTGACTGGGAAGCGAGGTGAATGGCGGATGGTCAAGGCAGCTCCTTAGGCGGCTTA AACCTGCCCTGTGGAACATCCCTGCAGGGGACTCCAACCAGCCCGAGCAACACGGATCCTGAGGGCGCTC CTGGTTAGGCATTTGCCCCACTGGGACGCCTCGCCAGAGCACTGTATGGCAGGCCCCCATGGAGGATCAA CGCAGTGGCTGAACACCGGGAAGGAACGGGCACTTGGAGTCTGGACATCTAAAACTTGGTAAGAGTAGTC TTTGAAACTTGCCCACTCCATTTGAGTGGAAGCATGGCCTGATCACCCATGGCGTGCCTTTATTGGCACT TTGGTTTTGGTTTGAATTGCTTGACAGGATTGGTCTTGGGAACTTGCCTACTCCATTTGAGTGGAAGTGT GGCCTGATCACCCATGGTGTGCCTCTCCTGGCACTTTGGTTTTTATTTTTGACTTGACTTGGATTGCTTG ATACTTTGGTTTTGGTTTTGACCTGGCTTGGATTTCTGGATACTCTGATTTTGGTTTGGTGCAAACTGCA AAACTGTGTGTGCGCCCTTTTTACCGGTTCTTTGTTTTGTGGTGTGTTTGTGGTGTGAGCGTGGTGTTTT GTCTTGAAGAAGCATAGGTCAGGCACGAATAAGCCCACCCCACTAGGAACTATGTTGACAAATTTCAAAA AAGAATCTGAGGGAGACTATGGAGTGCTATGACACCAGGAAAACTTAAAACTTTGTGTAAGATAGACTGG CCAGCATTAGAGGTAGGTTGGCCATTAGAAGGAAGCCTGGACAGGTCCCTTGTTTCAAAGGTATGGCACA AGGTAACCTATAAGCCAAGGAACCCAGACCAGTTCCCTTACAGAGACACTTGATTAGAGCTGGTTTTAGA CCCCCCACCCCCAACACATAGTGGTTGAGAGAACAGCAGCATAAGTGGCTGGCAGAGGCAAGGAAAGACC AGCAGAGAGAGAGAAAGGAAAGAGACAGAGAGGAAAAGAGGAAAAGAGAGAGAGGAAGAGACAGGAAGAG ACAGACAGAGAGTCAAGGATAGAGAGAGAGAGAGAGAGAGAGACACACACACACACACACACAGAGAGAG AGGAAGAGGCAGAGGCAAAAGGAAAGTCAAAGAGAGAGACAAAGTCAAAGAGAGAAAGAAAGAGAGAAAG AGAGAGAGATACAAAGTTAAGAAAAAAAAGCCATCTATACCAATTCTAATTTAGACAAAACAAGGTCTTA TTAATAGCAAAGGATAATTAAAATCCCAAACTTAGAAGGTTTTCTTTTTATTATTATTATTATTATACTT TAAGTTTTAGGGTACATGTGCACAACATGCATTTTTTTAAAATTTTTTTTAAAGGTTTTCAACTAAAGTT TGCTAAAAGTTAACAGTGTAACATGTATATAGTAACTTATATTCTTGTGGCCTAGTCCACAAGACACAAA AAAGGTTCGCTTTGGAAAAGAATGGTTATCATCTTCGAAAAAAAAAAGGAAAAAAAGGGGGGGCGGAATT TATATAAAAAGAGTATTATATGGTAAATTCTTGTCCTGAAACAAATTAACTGGTTGTTTAAAGAAATAAA TATTTGTAATAAGTCAGAAAGTTGAGGCATATCGAAGAATTGTCTGCGAAAGTCACGAAAGAGAAAAATG TTATAAAAAAATTTATGCAAAAAATGTTGTATAATTTAAAAGTAACTAGGCCTCCTGAATGTAAAACTGT TGAAAAAAAAAACAGTTTATATGCAAGGTGTATAAGAAAAGTAAAATATATCTTTGGTAAAAGAATTGTA AGGAGGCATAAGGATGTACATTTTCACCTACATTAAAAGGTTAAAAATAATTATTGTTTTGAAGATTTAA GCAAGTTTCAAAATGTTAATTGTAAAGAAAATTCTGTGTGTAAACATATTAGCTAAAGTTAAAGAAGTAT CATCCAGTTTTTCTGTGAACTGGACATTAAAGTAAAAGCATAACAGGTTTTTTCTTAAAGCACCAACCTG CTCTTTTGCAAAAATTATAAAGGGTTAAAAAGAATCTATAAAATCTTACCTTATGGTCAAACATTAACAA TTAGATACATATGTCTACAAGGTTTTATTAAAATTAAGTTTAATATTAATAACACACTAATATAAAGATA AAATTTAGCTTATCTGGTATAAAAATCATACGAGAAGCACTGTTAAATGTAAAATGGTATTTGGCTTTCT TTGGTTTAAAAACTAATAAAAATAGGTGCTAAAGGAAATTTCTCAGGAAAAAGGCACTAAGGACTATAAA GTCCACTGCCAAGGTCCCCACATTTAAAACAAAAGGTCAGTTCCTTAGAATTATATGCTTGGTTTATTTT CCACTTTCCTTTCTCTCAAAAACTAAAAGTCTTTTAGCACATGTACCACCCCTAGAATTTCTAGTAAACC AGCACCAGCCTGAAGATCACATTCTCATCGAAAGGTGGAAAGAAGAAAAACTCGAGCCAGCCTGGAAGGA CCCTACCTTGTGTTGCTAACCACCAAGACTGCTGTTCGTACAGCAAAAAAGGATGGACTCGTCACACCAG AATCAAGAAAGTGCCACCCCCTCCAGAGTCATGGGCCACAGTCCCAGAGGAAAACCCTGCCAAACTAAAG CTACGAAAAATCTCTTTTCATCTATTCTATTACTCTTCTTTCTTTCCTCGTGCTATTGCTGACCATCTAG TTATTAACATAACCAAGTCAATTTCACCTCAAACTATTGCATTTAATGCTTGCCTTGTTATACCCTGTGG GGACTTGCCAAGTCAAAGACAGCTCTCTACTTCAGAAAAGTACTTCTGTCCCTCCTGACTCTCCTCAGAC TGGACATTAGTAAACTAGGACCATTTAATCCAGGGAGATTTCGATAAAGACCCCAGTGCCAACCAGGAGT CTTGTCCCCTGATGTAGAGTTTTTATGCCGTAGTTGGTCCAACGTTCTGTGGACCACTAAAGAGCAAGAA TGGACTGCCCCAACCAGTTTTTGTAATTTCCTAAAACCATACATTCGTTTTACTAGAGGATCATAGAAGT TAAAGAGTTAAAACAAACTTTACCAATGAAGACAGGATACCAAGATGCAAATGCCTGGTTAAAATGCATC AAATATTCCATCTGCACGTTAAACAAAAGCAATTGTTATGCTTGTGCACATGGCAGGCCAGAGGCCCAGA TTGTCCCCTTTCCACTAAGGTGGTCCTCCAGTCGACCAGATGTGGGCTGCCTGGTAGCTCTTTTCCAGGA TTCTACAGCCTGTATTAATAAGTCATGCCAAGCTCTCTCTGCTATATCCCAAAGTCCAGCACCCTGCGGG TCAGCCCCCGAGGGCCATCCATCCTCCATCTCCCAACACTAAGTTCACTTCATGTCTCTCACAACAGGGA GGAAACTTAGCGTTCCTTGGAGACCTGAAAGGATGCAGTTAGCTTAAGAATTTTCAAGAGCTTATCAATC AGTCAGCCCTTGTTCATCCCCGAGCAGATGTGTGGTGGTATTGTGGTGGACCTTTACTGGGCACTCTGCC AAATAACTGGAGTGGCACTTGTACTTTAGTCCAATTGGCTATCCCTTTCACCCTGGCATTTCATCAACCA GAAGGAAAAAAAGAAAGACATTGTAAAGCGAGAGAAGCCCCTTATGGGTCTTTCGACTCTCATGTCTATT TAGATGCAATTGGAGTCCCACGAAGAATACCAGATCAATTTAAAGCTTGAAATCAAATAGCTGCAGGATT TAAGTCAATATTTTAGTGGGTGACAGTTAATAAAAATGTAGATTAGATAAACTACATCTATTACAACCAA CAACAACGAGGTTTTCATGAGTTAAAAGAAAACCTCATGTTGGTCCCAGCCCTGAGGCTACCTGACCTGA CAAAACTCTTTACACTCTATGTGTCAGAAAGAGAAAAAATGGCAGTTGGAGTTTTAACCCATACTGTGAG GCCCTGGCCAAGGCCAGTGGCCTATCTCTCAAAACAACTAGACAGGATTTCCAAAGGCTGGCCCCCAGGT CTAAGGGCCCTAGCAGCAACAGCCCTGTTAGCACAAGAAGCAGATAAACTAACCCTTAGGAAAACCTGAA TATAAAGGCCCCCCATGCTGTGGTAACTTTAATGACTACCAAAGGACCTCATTGGTTACAAATGCTAGAT TAACCAAGTACCAAAGCTTGCTATGTGAAAATCCCCACATAACCACTGAAGTTTGCAACACCCTAAACCC CACCACCTTGCTCCTGGTATCAGAGAGCCTAGTTGAACATACTGTGTAGAGGTGTTGGACTCAGTTTATT CTAGCAGGCCCAACCTCCGAGACTATCCTTAAACATCAGTAGACTGTGAGGGGTACGTGGACGGGAGTAG CTTCGCCAACCCCTGCAAAGTGACTCTGAAGAAGACGACAAGCTCTGCTCCAGTCACACCCAGAAGCTGA CTGGTCCACGCACGGCCGAAGCATGAGAAAACTCATTGCGGAACTCATTTTCCTTAAAATTTGGACTTTT ACAGTAAGGACTTCAACTGACCTTCCTCAGACTGAGGACTGTTCCAGTGTATACATCAAGTCACTGAGGT AGGACAAAAGGTTGCTACAGTCCTATTATTTTATGGTTATTATAAGTGTACTGGAACTCTAAAAATAACT TGTTTGTATAATGTTATTCTGTACAAGGTATGTAGCCCAGGAAGTGACCAACCTGATGTGTGTTATGACC CATCTGAGCCTCCCATGACCACGGTTTTTAAAATAAGATTAAGGACTGAGGACTGGTGGGGGCTCATAAA TGATATGAGTAAAGTGTTAGCCAAAACAGAAGAAAAAGGGGTGCCCAAACAAGTCACCTTAAAATTTGAT GCCTGTGCTGTCATTAATAGTAATAAGTTAGGAATAAAGTGTGGTTCTCTTAATTAGAAAAGAGGCTATA TGGCAGAAAATAAGTACATCTGTCATAAATTAGGACTGTGTGGAAATAAATGTAAATACTGGTCTTGTGT CATTTAGGCCACTTGGATTTAAAAAAAATGAAAAGGATCCAGTCCACCTTCAGAAAGGAAAAAAATGGCC CTTCCTGTGCTAAGGGACAATGTAACCCCTTAGAGCTAGTAATAACCAATCCCCTTGATCCTCGCTGGAA AAAAGAGTAGCGTGTGACCTTAGGAATCAATGGGGCTGGACTGAATCCCCGAGTAAATATCTTGGTTCGA GGAGAAGTTTACAAATGCTCTCTTGAGCCAGTGTTTCAAACTTTCTATGATGAACTAAATGTGCCAATAA CAGAATTTCCAGGAAAAACAAGAAATTTGTTTTTGCAATTAGCCGAGCATGTAGCCCAGTCTCTCACTGT CACTTCATGTTATGTATGTGGAGGAACTGTAATAGCAGATCAATGGCCATGGGAAGCCCGAGAATTAGTA CCTACAGACCCAGTTCCTGATGAATTCCCAGCTCAAAAGAATCACCCTGATAATTTCTGGGTCCTAAAAG CCTCAATCATTAGACAATACTATATAGCAAGAGTGGAGAAGGACTTCACCCTTCCTGTAGGAAGACTACA TGGTGGAGTTCAAACCACACAGAGAAAAATCCATTCAGTAAATTTCCAAAGTTGCAGACCGTTTAGGCCC ACCCAGAATCCCACCGGGACTGGACAGCCCCCACTGGGCTATACTGGATATGTGGACATAGAGCCTACAC TAAGCTGCCTGACAAGTAGTTGTGTTATTGGCACTATTAAACCATCTTTCTTCCTACTGTCCATAAAAAC AGGAGAACTCCTGGGCTTCCCTGTCTATGCTTCCCGTGAAAAGCATAGCTATAAGAAATTGAAACAATGA TAAATGGCCCCCTGAGAGAATCATACAGTATTATGGGCCTGCTACTTAGGCACAAGATGGCTCGTGGGGA TACCGGATCCCCATTTATATGATCAACTGAATCATACGGTTACAAGCTGTCTTAAAAATAATCACTGCAA CCGGCAGAGCCTTGACTATTCTGGCCCAGCAAGAAACTCAGATGAGAAATGCTATCTATCAAAATAGATT AGCTCTCGACTACTTGCTAGCAGCTGAAGGAGAGGTCTGTAGGAAATTTAACCTTACTAATTGCTGCCTA CACATAGATAACCAAGGGCAAGTAGTTGAAGACATAGTTAGAGATATGACAAAAGTGGCACATGTGCCCG TGCAAGTGTGGCATGGATTTGATCCTGGGGCCATGTTTAGAAAATGGTTCCCAGCGCTAGGAGGATTTAA AACTCTTATAATAAGAGTTATAATAGTAATAGGAACCTACTTACTGCTCCCTCGTTTGCTACCTGTACTT CTTCAAATGATAAAAAGCTTCATCGCTACCTTAGTATACCAAAATGCATCAGCACAAGTGTACTATATAA ATCACTATTGATCTGTCTAGCAAGAAGACATGGGTAGTAAACATGAAACAACTCCTGCTATTGAGTGAGA GTCTCAAAGTGGGGGAATAAGGGAGGAGACCACCCCTCATATTGTCTTATGCCCAATTTCTGCCTCCAAA GAAAGAAAAAGTAAAAACTAAAAGGCAGAAATGAAATCCACAAGCAGACAGCCCGGGCGCCACACCCTGG GACTGGTAGTTGAAAATCAATCCCGGACCTAATCGGTTATGTTATCTATAGATTACAGACATTGTATAGA AAAGCATTGTGAAAATCTCATTCCTGTTTTGTTCCAATCTAATTACTGGTGCGTGCAGCCCCCAGTCACG TACCCACGTACCTCCTGCTTGCTCAATCGATCACGACCCTCTCACGCACACCCCCTTAGACTTGTGAGTC CTTAAAAGGGACAGGAATTGCTCACTCGGGGCGGGGGCTCGGCTCTTGAGACAGGAGTCTTGCTGATGCC TCCGGCCTAATAAACCCCTTCCTTCTTTAACTCGGTGTCTGAGGAGTTTTGTCTGCAGCTCGTCCTGCTA CAGGTGAAACCCCATCTCTACTAAAAAAATACAAAAAAATTAGCCAGGTGTGGTGGCGGGTGCCTGTAGT CCCAGCTGCTTGGGAGGCTGAGGCAGGAGAATGGTGTGAGCCTGGGAGGCAGAGCTTGCAGTGAGCCGAG ATCATGCCACTGCACTCCAGCCTGGGCAACAGAGTAAGACTCCGTCTCAAAAAAAAAAAAAAAAATCATG GATGGTTGGTGTCATGGAGGGGATAGGTCTTTGGAAGAACCTTCCTCTGAAGCTGGCTCTGTACATTTAA ATAAGAATACTGCAAATCATCAAAGCCTTTAGCAAGTCTGACTCTTGGAGTGAGCCTTTGTTTTTCTTCA TTTATAAAAGGAAAAGGGGACTGTACTGTTCACATTTATTTATTTTTTTATTTTTTTAATTGATCATTCT TGGGTGTTTCTCCCAGAGGGGGATTTGGCAGGGTCATAGGACAATAGTGGAGGGAAGGTCAGCAGATAAA CAAGTGAACAAAGGTCTCTGGTTTTCCTAGGCAGAGGACCCTGCGGCCTTCCGCAGTGTTTGTGTCCCTG GGTACTTGAGATTAGGGAGTGGTGATGACTCTTAACGAGCATGCTGCCTTCAAGTATCTGTGATGTGAGG AGCGCCTCTGCCCGGCCGCGACCCCGTCTGGGAGGTGAGGAGCATCTCTGCCCGGCCGCCCCGTCTGAGA AGTGAGGAGACCCTCTACCTGGCAACCGCCCCGTCTGAGAAGTGAGGAGCCCCTCCGCCTGGCAGCCACC CCGTCTGGGAAGTGAGGAGCGTCTCAGCCCGGCAGCCACCCCGTCCGGGAGGGAGGTGGGGGTCAGCCCC CGCCAGGCCAGCCGCCCCGTCCGGGAGGGAGGTGGGGGTCAGCCCCTGCCAGGCCAGCCGCCCCGTCCCG GAGGGAGGTGGGGGGGTCAGCCCCCTGCCCGGCCACATTTTGTTTTTGAATCGAGGTATAATTTACATAC AGTGAAATGCAGAGGTTTTTTTATACAGGATCTCTGTCGAGAGGCTGGAGTGCAGTGGTGCTATCACAGC TCACTGCAGCCTCAACCTCGCCAGGCTCAAGCGATCCTCCCACCTCAGCCTCCAGAGTAGCAGGGACTAC AGGTGTGCATCACCATGCCCAGCTAATTTGTGTGTGTGTGTTTGTGTGTGTGTTTGTAGATATAGGGTTT TGCCATGTTGGCCACGCTGGTCTCAAACTCCTGACCTCAAGTGATCTACCCACCTTGGCCTCTCAAAGTG CTGGGATTACAGGTATGAGCCTCTGCACCCAGCCATGGTCTGAAAATCTTGATTGAAATACCACCTTTTC ATTTCCAGACACCGCTATTTAAAGTTACAACACCCTCAAGACACACTTTATCCTCCATTCCTGCTGCTTC TCCATAACACTTATTACTAGCTGACCTTCTATGTAATGTATCTATCCTTTATCTCTAGTCCCACAGAATG TAAACTCCAGGGCAGCAGAGATTTTTGTTTCGTTTATGTACATCTGTATATTCAGTAGTTAAAACAGTAC TTGGGACCTAGTTGCCACTCAATAAACATTTGTTGAATAAATTAAATAATAAACTACATTAGTTCTTCAA TTAATTTTTTAAAATATGGTGGTTAATAGTGAGTAACATTCAAAAAATAAGTTGAAAATTTATACCTATT GCCTCTTACCCACAATAAAAAAGGGTAAATTCAAGGAAATTTTCTTTTGTGCTTTATGAAAGTTGTTTTTCATATTTGGAGTCATGTCAATCAGATTAAGGAAAATGCAAGTTGTGTTTTCAGAGAGATACAAGATTTATAAATAACCATCCTCTCCCTTGCCCTTCAACATTTTAGCTAAACAAAAACAAGAGGAAAACAAGATTTACAATTTATCAATTCATTGAAAATCAGAGCCAGAGAAGCAGGAAATGACATTGTAGGAAAAAACTGCTTTTGAAAAAGCACAACTTACTCATGACAATCAGAGTGATCAAAAAAATCCTCAATAGTGTGGCATTTGGATCCATTTATCATTACATTTCCATGGGACAGAGTCATAAAAATAGGATGTTCTTTCTCATTATGGCAAATTAAACCATCAATTAAAAACTCAGATACATAAAAATTAAAGATGTAAGAATGAAAGTTAATGCTAAATTTTTATTTTCAGTCAACTATTGTATGTTTTCTAGCTTTTCATTGCTTTTTTCCTATTTTCTGTTAGATTAATATTTTTT'
        output = run_genscan(sequence=sequence)
        asserted_cds_list = ['DYEVTFTEDKINALIKAASVNIETFWPGLFAKVLANVNIGSHICS'
                             'VEGGKKT', 'WSTERWTNYGIKTLHQGTRLLVGTGVFIEISLD']
        asserted_exon_list = [GenomicElement
                              (number=1, start=302, end=460),
                              GenomicElement
                              (number=1, start=6076, end=5975)]
        asserted_intron_list = [GenomicElement
                                (number=1, start=460, end=6076)]
        self.assertEqual(output.cds_list, asserted_cds_list)
        self.assertEqual(output.exon_list, asserted_exon_list)
        self.assertEqual(output.intron_list, asserted_intron_list)

    def test_DNASequence(self):
        sequence = 'ATGCCGTGCA'
        dna = DNASequence(sequence)
        alphabet = {'A', 'T', 'C', 'G'}

        self.assertEqual(dna.sequence, sequence)
        self.assertEqual(dna.alphabet, alphabet)
        self.assertEqual(dna.transcribe().sequence, 'AUGCCGUGCA')
        self.assertEqual(dna.complement().sequence, 'TACGGCACGT')
        self.assertEqual(dna.gc_content(), 0.6)

    def test_RNASequence(self):
        sequence = 'AUGCCGUGCA'
        rna = RNASequence(sequence)
        alphabet = {'A', 'U', 'C', 'G'}

        self.assertEqual(rna.sequence, sequence)
        self.assertEqual(rna.alphabet, alphabet)

    def test_AminoAcidSequence(self):
        sequence = 'DYEVTFTEDKINAL'
        peptide = AminoAcidSequence(sequence)
        alphabet = set("ACDEFGHIKLMNPQRSTVWY")

        self.assertEqual(peptide.sequence, sequence)
        self.assertEqual(peptide.alphabet, alphabet)
        self.assertEqual(peptide.molecular_weight, 1.9)


if __name__ == '__main__':
    unittest.main()
